// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ReceivablesContext))]
    [Migration("20231022184330_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Debtor", b =>
                {
                    b.Property<int>("Reference")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Reference");

                    b.ToTable("Debtors");
                });

            modelBuilder.Entity("Domain.Receivable", b =>
                {
                    b.Property<int>("Reference")
                        .HasColumnType("int");

                    b.Property<bool?>("Cancelled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClosedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyCode")
                        .HasColumnType("int");

                    b.Property<int?>("DebtorReference")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OpeningValue")
                        .HasColumnType("float");

                    b.Property<double>("PaidValue")
                        .HasColumnType("float");

                    b.HasKey("Reference");

                    b.HasIndex("DebtorReference");

                    b.ToTable("Receivables");
                });

            modelBuilder.Entity("Domain.Receivable", b =>
                {
                    b.HasOne("Domain.Debtor", null)
                        .WithMany("Receivables")
                        .HasForeignKey("DebtorReference");
                });

            modelBuilder.Entity("Domain.Debtor", b =>
                {
                    b.Navigation("Receivables");
                });
#pragma warning restore 612, 618
        }
    }
}
